25/07


*********To Do*********

------Model------

.Board: make sure you cannot add a disk in a place where there already is one

------View------

.create actual board (decouple from model.board and use view)
.return specific error when there are no conversions available for the given new position, out of board, etc.




------UML------

.Update UML with changes in model - new rules module







*********Last Done (last done at the top)*********

-get_move function in GameConsoleView class, game_console_view module
-Deciding whether to pass a disk object or not in the add_disk function
-Placing disk objects in board







*********Questions*********

1: about separating game logic from main game module:
     -encapsulated is_valid_move and check_available_moves, was that OK?

2: how to not import "circular modules" but still get the type hint in function definitions?