********Doing*********
.testing deletion of calculate_score func in game.py module //DONE
.next: check if not problem when calculating in simulation cases



********To Do*********

.Step 3: simple AI
  -user choice input (game_console_view.py -> duplicate in game_view.py) -> should afterwards choose if black or white.
  -create function in game.py for adding the new SimpleAI player with its corresponding color to the list
  -update game_controller with player mode input and update in game.py
  -implement the simple AI lookahead, in combination with GameRules
  
.How will the game_controller handle the play against the computer?
.How to test the SimpleAI before finishing all of its functions?



.The source code should be well commented and organized
.All classes and methods should be documented with docstrings
.Update UML with changes in model, there are new rules module




*********Known problems*********




*********Last Done (last done at the top)*********
.creating player mode user choice input (incomplete, validation needed)



*********Questions*********
1: about separating game logic from main game module:
     -encapsulated is_valid_move and check_available_moves, was that OK?
2: how to avoid "circular modules" but still get the type hint in function definitions?